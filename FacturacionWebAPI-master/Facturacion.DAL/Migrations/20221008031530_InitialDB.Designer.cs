// <auto-generated />
using System;
using Facturacion.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Facturacion.DAL.Migrations
{
    [DbContext(typeof(FacturacionDBContext))]
    [Migration("20221008031530_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Facturacion.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Categoria", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NombreCategoria = "Navidad"
                        },
                        new
                        {
                            Id = 2,
                            NombreCategoria = "Tecnología"
                        },
                        new
                        {
                            Id = 3,
                            NombreCategoria = "Juguetes"
                        });
                });

            modelBuilder.Entity("Facturacion.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("Email")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "SMITH",
                            Direccion = "1913 Hanoi Way",
                            Email = "MARY.SMITH@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1992, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "MARY",
                            Telefono = "28303384290"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "JOHNSON",
                            Direccion = "1121 Loja Avenue",
                            Email = "PATRICIA.JOHNSON@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1997, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "PATRICIA",
                            Telefono = "838635286649"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "WILLIAMS",
                            Direccion = "692 Joliet Street",
                            Email = "LINDA.WILLIAMS@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1982, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "LINDA",
                            Telefono = "448477190408"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "JONES",
                            Direccion = "1566 Inegl Manor",
                            Email = "BARBARA.JONES@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1987, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "BARBARA",
                            Telefono = "705814003527"
                        },
                        new
                        {
                            Id = 5,
                            Apellido = "BROWN",
                            Direccion = "53 Idfu Parkway",
                            Email = "ELIZABETH.BROWN@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1997, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "ELIZABETH",
                            Telefono = "10655648674"
                        },
                        new
                        {
                            Id = 6,
                            Apellido = "DAVIS",
                            Direccion = "1795 Santiago de Compostela Way",
                            Email = "JENNIFER.DAVIS@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1986, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "JENNIFER",
                            Telefono = "860452626434"
                        },
                        new
                        {
                            Id = 7,
                            Apellido = "MILLER",
                            Direccion = "900 Santiago de Compostela Parkway",
                            Email = "MARIA.MILLER@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1989, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "MARIA",
                            Telefono = "716571220373"
                        },
                        new
                        {
                            Id = 8,
                            Apellido = "WILSON",
                            Direccion = "478 Joliet Way",
                            Email = "SUSAN.WILSON@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1998, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "SUSAN",
                            Telefono = "657282285970"
                        },
                        new
                        {
                            Id = 9,
                            Apellido = "MOORE",
                            Direccion = "613 Korolev Drive",
                            Email = "MARGARET.MOORE@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1992, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "MARGARET",
                            Telefono = "380657522649"
                        },
                        new
                        {
                            Id = 10,
                            Apellido = "TAYLOR",
                            Direccion = "1531 Sal Drive",
                            Email = "DOROTHY.TAYLOR@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1996, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "DOROTHY",
                            Telefono = "648856936185"
                        },
                        new
                        {
                            Id = 11,
                            Apellido = "ANDERSON",
                            Direccion = "1542 Tarlac Parkway",
                            Email = "LISA.ANDERSON@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1985, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "LISA",
                            Telefono = "635297277345"
                        },
                        new
                        {
                            Id = 12,
                            Apellido = "THOMAS",
                            Direccion = "808 Bhopal Manor",
                            Email = "NANCY.THOMAS@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1991, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "NANCY",
                            Telefono = "465887807014"
                        },
                        new
                        {
                            Id = 13,
                            Apellido = "JACKSON",
                            Direccion = "270 Amroha Parkway",
                            Email = "KAREN.JACKSON@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1986, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "KAREN",
                            Telefono = "695479687538"
                        },
                        new
                        {
                            Id = 14,
                            Apellido = "WHITE",
                            Direccion = "770 Bydgoszcz Avenue",
                            Email = "BETTY.WHITE@sakilacustomer.org",
                            FechaNacimiento = new DateTime(2001, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "BETTY",
                            Telefono = "517338314235"
                        },
                        new
                        {
                            Id = 15,
                            Apellido = "HARRIS",
                            Direccion = "419 Iligan Lane",
                            Email = "HELEN.HARRIS@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1992, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "HELEN",
                            Telefono = "990911107354"
                        },
                        new
                        {
                            Id = 16,
                            Apellido = "MARTIN",
                            Direccion = "360 Toulouse Parkway",
                            Email = "SANDRA.MARTIN@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1993, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "SANDRA",
                            Telefono = "949312333307"
                        },
                        new
                        {
                            Id = 17,
                            Apellido = "THOMPSON",
                            Direccion = "270 Toulon Boulevard",
                            Email = "DONNA.THOMPSON@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1989, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "DONNA",
                            Telefono = "407752414682"
                        },
                        new
                        {
                            Id = 18,
                            Apellido = "GARCIA",
                            Direccion = "320 Brest Avenue",
                            Email = "CAROL.GARCIA@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1999, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "CAROL",
                            Telefono = "747791594069"
                        },
                        new
                        {
                            Id = 19,
                            Apellido = "MARTINEZ",
                            Direccion = "1417 Lancaster Avenue",
                            Email = "RUTH.MARTINEZ@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1983, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "RUTH",
                            Telefono = "272572357893"
                        },
                        new
                        {
                            Id = 20,
                            Apellido = "ROBINSON",
                            Direccion = "1688 Okara Way",
                            Email = "SHARON.ROBINSON@sakilacustomer.org",
                            FechaNacimiento = new DateTime(1984, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "SHARON",
                            Telefono = "144453869132"
                        });
                });

            modelBuilder.Entity("Facturacion.Models.Factura", b =>
                {
                    b.Property<int>("NumeroFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroFactura"), 1L, 1);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaExpedicion")
                        .HasColumnType("datetime2");

                    b.HasKey("NumeroFactura");

                    b.HasIndex("ClienteId");

                    b.ToTable("Factura", (string)null);

                    b.HasData(
                        new
                        {
                            NumeroFactura = 1,
                            ClienteId = 1,
                            FechaExpedicion = new DateTime(2020, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            NumeroFactura = 2,
                            ClienteId = 2,
                            FechaExpedicion = new DateTime(2000, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            NumeroFactura = 3,
                            ClienteId = 3,
                            FechaExpedicion = new DateTime(2022, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            NumeroFactura = 4,
                            ClienteId = 4,
                            FechaExpedicion = new DateTime(2018, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            NumeroFactura = 5,
                            ClienteId = 2,
                            FechaExpedicion = new DateTime(2001, 1, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            NumeroFactura = 6,
                            ClienteId = 5,
                            FechaExpedicion = new DateTime(2000, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            NumeroFactura = 7,
                            ClienteId = 6,
                            FechaExpedicion = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            NumeroFactura = 8,
                            ClienteId = 7,
                            FechaExpedicion = new DateTime(2022, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            NumeroFactura = 9,
                            ClienteId = 19,
                            FechaExpedicion = new DateTime(2018, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            NumeroFactura = 10,
                            ClienteId = 15,
                            FechaExpedicion = new DateTime(2019, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Facturacion.Models.ItemVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CantidadVendida")
                        .HasColumnType("int");

                    b.Property<int>("NumeroFactura")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NumeroFactura");

                    b.HasIndex("ProductoId");

                    b.ToTable("ItemVenta", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CantidadVendida = 1,
                            NumeroFactura = 1,
                            PrecioUnitario = 59900m,
                            ProductoId = 1
                        },
                        new
                        {
                            Id = 2,
                            CantidadVendida = 1,
                            NumeroFactura = 1,
                            PrecioUnitario = 169900m,
                            ProductoId = 8
                        },
                        new
                        {
                            Id = 3,
                            CantidadVendida = 2,
                            NumeroFactura = 1,
                            PrecioUnitario = 69900m,
                            ProductoId = 23
                        },
                        new
                        {
                            Id = 4,
                            CantidadVendida = 1,
                            NumeroFactura = 2,
                            PrecioUnitario = 69900m,
                            ProductoId = 23
                        },
                        new
                        {
                            Id = 5,
                            CantidadVendida = 1,
                            NumeroFactura = 2,
                            PrecioUnitario = 59900m,
                            ProductoId = 29
                        },
                        new
                        {
                            Id = 6,
                            CantidadVendida = 1,
                            NumeroFactura = 2,
                            PrecioUnitario = 33200m,
                            ProductoId = 30
                        },
                        new
                        {
                            Id = 7,
                            CantidadVendida = 1,
                            NumeroFactura = 3,
                            PrecioUnitario = 699000m,
                            ProductoId = 13
                        },
                        new
                        {
                            Id = 8,
                            CantidadVendida = 1,
                            NumeroFactura = 3,
                            PrecioUnitario = 55900m,
                            ProductoId = 14
                        },
                        new
                        {
                            Id = 9,
                            CantidadVendida = 1,
                            NumeroFactura = 3,
                            PrecioUnitario = 189900m,
                            ProductoId = 15
                        },
                        new
                        {
                            Id = 10,
                            CantidadVendida = 1,
                            NumeroFactura = 4,
                            PrecioUnitario = 959900m,
                            ProductoId = 16
                        },
                        new
                        {
                            Id = 11,
                            CantidadVendida = 2,
                            NumeroFactura = 4,
                            PrecioUnitario = 149900m,
                            ProductoId = 18
                        },
                        new
                        {
                            Id = 12,
                            CantidadVendida = 1,
                            NumeroFactura = 4,
                            PrecioUnitario = 409900m,
                            ProductoId = 10
                        },
                        new
                        {
                            Id = 13,
                            CantidadVendida = 1,
                            NumeroFactura = 5,
                            PrecioUnitario = 54900m,
                            ProductoId = 2
                        },
                        new
                        {
                            Id = 14,
                            CantidadVendida = 4,
                            NumeroFactura = 5,
                            PrecioUnitario = 33000m,
                            ProductoId = 6
                        },
                        new
                        {
                            Id = 15,
                            CantidadVendida = 1,
                            NumeroFactura = 5,
                            PrecioUnitario = 699000m,
                            ProductoId = 13
                        },
                        new
                        {
                            Id = 16,
                            CantidadVendida = 1,
                            NumeroFactura = 6,
                            PrecioUnitario = 39900m,
                            ProductoId = 3
                        },
                        new
                        {
                            Id = 17,
                            CantidadVendida = 1,
                            NumeroFactura = 6,
                            PrecioUnitario = 49900m,
                            ProductoId = 5
                        },
                        new
                        {
                            Id = 18,
                            CantidadVendida = 1,
                            NumeroFactura = 6,
                            PrecioUnitario = 14900m,
                            ProductoId = 7
                        },
                        new
                        {
                            Id = 19,
                            CantidadVendida = 1,
                            NumeroFactura = 7,
                            PrecioUnitario = 1899900m,
                            ProductoId = 11
                        },
                        new
                        {
                            Id = 20,
                            CantidadVendida = 2,
                            NumeroFactura = 7,
                            PrecioUnitario = 29900m,
                            ProductoId = 17
                        },
                        new
                        {
                            Id = 21,
                            CantidadVendida = 1,
                            NumeroFactura = 7,
                            PrecioUnitario = 69900m,
                            ProductoId = 19
                        },
                        new
                        {
                            Id = 22,
                            CantidadVendida = 1,
                            NumeroFactura = 8,
                            PrecioUnitario = 269900m,
                            ProductoId = 24
                        },
                        new
                        {
                            Id = 23,
                            CantidadVendida = 1,
                            NumeroFactura = 8,
                            PrecioUnitario = 109900m,
                            ProductoId = 25
                        },
                        new
                        {
                            Id = 24,
                            CantidadVendida = 1,
                            NumeroFactura = 8,
                            PrecioUnitario = 99900m,
                            ProductoId = 28
                        },
                        new
                        {
                            Id = 25,
                            CantidadVendida = 1,
                            NumeroFactura = 9,
                            PrecioUnitario = 169900m,
                            ProductoId = 8
                        },
                        new
                        {
                            Id = 26,
                            CantidadVendida = 1,
                            NumeroFactura = 9,
                            PrecioUnitario = 55900m,
                            ProductoId = 14
                        },
                        new
                        {
                            Id = 27,
                            CantidadVendida = 2,
                            NumeroFactura = 9,
                            PrecioUnitario = 33000m,
                            ProductoId = 6
                        },
                        new
                        {
                            Id = 28,
                            CantidadVendida = 1,
                            NumeroFactura = 10,
                            PrecioUnitario = 399900m,
                            ProductoId = 9
                        },
                        new
                        {
                            Id = 29,
                            CantidadVendida = 1,
                            NumeroFactura = 10,
                            PrecioUnitario = 1649000m,
                            ProductoId = 12
                        },
                        new
                        {
                            Id = 30,
                            CantidadVendida = 1,
                            NumeroFactura = 10,
                            PrecioUnitario = 149900m,
                            ProductoId = 18
                        });
                });

            modelBuilder.Entity("Facturacion.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CantidadExistencia")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Producto", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CantidadExistencia = 50,
                            CategoriaId = 1,
                            Nombre = "RENO NAVIDEÑO DE 53 CM CON FALDA A CUADROS",
                            PrecioUnitario = 59900m
                        },
                        new
                        {
                            Id = 2,
                            CantidadExistencia = 45,
                            CategoriaId = 1,
                            Nombre = "SANTA COLGANTE ROJO - HO!HO!HO!",
                            PrecioUnitario = 54900m
                        },
                        new
                        {
                            Id = 3,
                            CantidadExistencia = 47,
                            CategoriaId = 1,
                            Nombre = "MUÑECO DE NIEVE SENTADO DE 21 CM CON BUSO VERDE",
                            PrecioUnitario = 39900m
                        },
                        new
                        {
                            Id = 4,
                            CantidadExistencia = 25,
                            CategoriaId = 1,
                            Nombre = "PIE DE ÁRBOL BEIGE DE 90 CM, MUÑECO DE NIEVE",
                            PrecioUnitario = 89900m
                        },
                        new
                        {
                            Id = 5,
                            CantidadExistencia = 33,
                            CategoriaId = 1,
                            Nombre = "CORONA NAVIDEÑA VERDE DE 40 CM CON FRUTOS ROJOS, HOJAS Y MANZANAS",
                            PrecioUnitario = 49900m
                        },
                        new
                        {
                            Id = 6,
                            CantidadExistencia = 44,
                            CategoriaId = 1,
                            Nombre = "COJÍN ROJO DE 35.5 CM - HAPPY NEW YEAR",
                            PrecioUnitario = 34900m
                        },
                        new
                        {
                            Id = 7,
                            CantidadExistencia = 34,
                            CategoriaId = 1,
                            Nombre = "RAMA NAVIDEÑA DE FRUTOS ROJOS ESCARCHADA DE 73 CM",
                            PrecioUnitario = 14900m
                        },
                        new
                        {
                            Id = 8,
                            CantidadExistencia = 10,
                            CategoriaId = 1,
                            Nombre = "ÁRBOL DE NAVIDAD DE 180 CM Y 720 PUNTAS",
                            PrecioUnitario = 169900m
                        },
                        new
                        {
                            Id = 9,
                            CantidadExistencia = 5,
                            CategoriaId = 1,
                            Nombre = "ÁRBOL NAVIDEÑO VERDE Y BLANCO DE 1.80 M",
                            PrecioUnitario = 399900m
                        },
                        new
                        {
                            Id = 10,
                            CantidadExistencia = 27,
                            CategoriaId = 1,
                            Nombre = "PESEBRE DE 11 FIGURAS EN 1 PIEZA DE 40 X 36 CM CON LUZ Y SONIDO",
                            PrecioUnitario = 409900m
                        },
                        new
                        {
                            Id = 11,
                            CantidadExistencia = 7,
                            CategoriaId = 2,
                            Nombre = "PORTÁTIL ACER, INTEL® CORE™ I5 1035G1, RAM 8 GB, 256 GB SSD, A315-57G-59KN, 15.6\" FHD, NEGRO",
                            PrecioUnitario = 1899900m
                        },
                        new
                        {
                            Id = 12,
                            CantidadExistencia = 22,
                            CategoriaId = 2,
                            Nombre = "ALL IN ONE HP, AMD RYZEN™ 3, RAM 4 GB, 128 GB SSD, 22-DD0522LA, 21.5” FHD, NEGRO",
                            PrecioUnitario = 1649000m
                        },
                        new
                        {
                            Id = 13,
                            CantidadExistencia = 57,
                            CategoriaId = 2,
                            Nombre = "TABLETA LENOVO, RAM 4 GB, 64 GB, TB-X306X TAB M10 HD, 10.1\", GRIS",
                            PrecioUnitario = 699000m
                        },
                        new
                        {
                            Id = 14,
                            CantidadExistencia = 5,
                            CategoriaId = 2,
                            Nombre = "TECLADO NUMÉRICO TARGUS DE USB, NEGRO",
                            PrecioUnitario = 55900m
                        },
                        new
                        {
                            Id = 15,
                            CantidadExistencia = 100,
                            CategoriaId = 2,
                            Nombre = "COMBO HP DE TECLADO + MOUSE INALÁMBRICO, BLANCO",
                            PrecioUnitario = 189900m
                        },
                        new
                        {
                            Id = 16,
                            CantidadExistencia = 14,
                            CategoriaId = 2,
                            Nombre = "GOOGLE WIFI X 3, BLANCO",
                            PrecioUnitario = 959900m
                        },
                        new
                        {
                            Id = 17,
                            CantidadExistencia = 64,
                            CategoriaId = 2,
                            Nombre = "MEMORIA USB DE 64 GB MAXELL, NEGRA CON PLATEADO",
                            PrecioUnitario = 29900m
                        },
                        new
                        {
                            Id = 18,
                            CantidadExistencia = 8,
                            CategoriaId = 2,
                            Nombre = "HUB USB INFINITO MULTIPUERTO CON HDMI",
                            PrecioUnitario = 149900m
                        },
                        new
                        {
                            Id = 19,
                            CantidadExistencia = 85,
                            CategoriaId = 2,
                            Nombre = "MOUSE INALÁMBRICO NIGTHFALL CAMO CON BLUETOOTH, AZUL",
                            PrecioUnitario = 69900m
                        },
                        new
                        {
                            Id = 20,
                            CantidadExistencia = 17,
                            CategoriaId = 2,
                            Nombre = "CÁMARA WEB 12 MP, HAVIT HV-NA20G",
                            PrecioUnitario = 289900m
                        },
                        new
                        {
                            Id = 21,
                            CantidadExistencia = 71,
                            CategoriaId = 3,
                            Nombre = "FIGURA DE LAS TORTUGAS NINJA DE 51 CM – LEONARDO",
                            PrecioUnitario = 269900m
                        },
                        new
                        {
                            Id = 22,
                            CantidadExistencia = 25,
                            CategoriaId = 3,
                            Nombre = "SR. CARA DE PAPA",
                            PrecioUnitario = 69900m
                        },
                        new
                        {
                            Id = 23,
                            CantidadExistencia = 58,
                            CategoriaId = 3,
                            Nombre = "IRON MAN",
                            PrecioUnitario = 69900m
                        },
                        new
                        {
                            Id = 24,
                            CantidadExistencia = 65,
                            CategoriaId = 3,
                            Nombre = "FIGURA DE IRON SPIDER ENDGAME DE 50 CM",
                            PrecioUnitario = 269900m
                        },
                        new
                        {
                            Id = 25,
                            CantidadExistencia = 2,
                            CategoriaId = 3,
                            Nombre = "REMOLQUE HOT WHEELS, DISEÑO TIBURÓN",
                            PrecioUnitario = 109900m
                        },
                        new
                        {
                            Id = 26,
                            CantidadExistencia = 19,
                            CategoriaId = 3,
                            Nombre = "CAMIONETA MONSTER JAM RC GRAVE DIGGER",
                            PrecioUnitario = 149900m
                        },
                        new
                        {
                            Id = 27,
                            CantidadExistencia = 88,
                            CategoriaId = 3,
                            Nombre = "LANZADOR DE DARDOS SONIC RAPTOR CON 10 DARDOS",
                            PrecioUnitario = 79900m
                        },
                        new
                        {
                            Id = 28,
                            CantidadExistencia = 35,
                            CategoriaId = 3,
                            Nombre = "LANZADOR NERF DINOSQUAD RAPTOR-SLASH CON 6 DARDOS",
                            PrecioUnitario = 99900m
                        },
                        new
                        {
                            Id = 29,
                            CantidadExistencia = 26,
                            CategoriaId = 3,
                            Nombre = "TIMÓN DIDÁCTICO AZUL CON LUZ Y SONIDO",
                            PrecioUnitario = 59900m
                        },
                        new
                        {
                            Id = 30,
                            CantidadExistencia = 11,
                            CategoriaId = 3,
                            Nombre = "BLOQUES LÓGICOS EN CAUCHO ESPUMA, 48 PIEZAS",
                            PrecioUnitario = 33200m
                        });
                });

            modelBuilder.Entity("Facturacion.Models.Factura", b =>
                {
                    b.HasOne("Facturacion.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Facturacion.Models.ItemVenta", b =>
                {
                    b.HasOne("Facturacion.Models.Factura", "Factura")
                        .WithMany("ItemsVenta")
                        .HasForeignKey("NumeroFactura")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Facturacion.Models.Producto", "Producto")
                        .WithMany("ItemsVenta")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Facturacion.Models.Producto", b =>
                {
                    b.HasOne("Facturacion.Models.Categoria", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Facturacion.Models.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Facturacion.Models.Factura", b =>
                {
                    b.Navigation("ItemsVenta");
                });

            modelBuilder.Entity("Facturacion.Models.Producto", b =>
                {
                    b.Navigation("ItemsVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
